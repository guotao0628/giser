<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/aop 
 		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		">

	<description>Spring MVC Configuration</description>

	<!-- 加载配置属性文件 -->
	<context:property-placeholder
		ignore-unresolvable="true" location="classpath:config.properties" />

	<!-- 使用Annotation自动注册Bean,只扫描@Controller -->
	<context:component-scan base-package="com.gisquest.webgis"><!-- base-package 
			如果多个，用“,”分隔 -->
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 默认的注解映射的支持，org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -->
	<mvc:annotation-driven
		content-negotiation-manager="contentNegotiationManager">
		<mvc:message-converters register-defaults="true">
			<!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg value="UTF-8" />
			</bean>
			<!-- 将Jackson2HttpMessageConverter的默认格式化输出为false -->
			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>
				<property name="prettyPrint" value="false" />
				<!-- <property name="objectMapper"> <bean class="com.gisquest.platform.common.mapper.JsonMapper"></bean> 
					</property> -->
			</bean>
			<!-- 使用XML格式输出数据 -->
			<!-- <bean class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter"> 
				<constructor-arg> <bean class="org.springframework.oxm.xstream.XStreamMarshaller"> 
				<property name="streamDriver"> <bean class="com.thoughtworks.xstream.io.xml.StaxDriver" 
				/> </property> </bean> </constructor-arg> <property name="supportedMediaTypes" 
				value="application/xml"></property> </bean> -->
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- REST中根据URL后缀自动判定Content-Type及相应的View -->
	<bean id="contentNegotiationManager"
		class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<property name="mediaTypes">
			<map>
				<entry key="xml" value="application/xml" />
				<entry key="json" value="application/json" />
			</map>
		</property>
		<property name="ignoreAcceptHeader" value="true" />
		<property name="favorPathExtension" value="true" />
	</bean>

	<!-- 上传处理器 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 上传限制 500M -->
		<property name="maxUploadSize" value="500000000" />
		<property name="resolveLazily" value="true" />
	</bean>

	<!-- 对静态资源文件的访问， 将无法mapping到Controller的path交给default servlet handler处理 -->
	<mvc:default-servlet-handler />

	<!-- 静态资源映射 -->
	<mvc:resources mapping="/static/**" location="/static/"
		cache-period="31536000" />

	<!-- 拦截器 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/admin/**" />
			<mvc:exclude-mapping path="/admin/login.html" />
			<mvc:exclude-mapping path="/admin/_login" />
			<mvc:exclude-mapping path="/admin/extra_lock.html" />
			<mvc:exclude-mapping path="/admin/_unlock" />
			<mvc:exclude-mapping path="/admin/Config*" />
			<mvc:exclude-mapping path="/admin/media/**" />
			<mvc:exclude-mapping path="/admin/UploadImgs/**" />
			<mvc:exclude-mapping path="/admin/layer/**" />
			<bean
				class="com.gisquest.webgis.modules.sys.web.interceptor.UserInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>

	<!-- 原本为true -->
	<aop:aspectj-autoproxy proxy-target-class="false" />
</beans>